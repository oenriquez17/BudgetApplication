@model BudgetApplication.ViewModels.NewTransactionViewModel

@{
    ViewBag.Title = "Transaction Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("ProcessTransaction", "Transaction", FormMethod.Post))
{

    <div class="form-group">
        @Html.LabelFor(m => m.SelectedPrimaryAccountId)
        @Html.DropDownListFor(
            m => m.SelectedPrimaryAccountId,
            new SelectList(Model.Accounts,
            "AccountId", "AccountName"),
            "Select Account",
            new { @class = "form-control", @id = "primaryAccountDropdown" })
    </div>

    <div id="balanceContainer" class="hidden">
        <p>Balance</p>
        <p id="balanceText"></p>
    </div>

    <div id="debitActionForm" class="form-group hidden">
        @Html.LabelFor(m => m.SelectedDebitTransactionType)
        @Html.DropDownListFor(
            m => m.SelectedDebitTransactionType,
            new SelectList(Model.DebitTransactionTypes,
            "TransactionTypeId", "TransactionTypeName"),
            "Select Transaction Type",
            new { @class = "form-control", @id = "debitTransactionDropdown" })
    </div>

    <div id="creditActionForm" class="form-group hidden">
        @Html.LabelFor(m => m.SelectedCreditTransactionType)
        @Html.DropDownListFor(
            m => m.SelectedCreditTransactionType,
            new SelectList(Model.CreditTransactionTypes,
            "TransactionTypeId", "TransactionTypeName"),
            "Select Transaction Type",
            new { @class = "form-control" })
    </div>

   
    <div class="form-group hidden" id="amountField">
        @Html.LabelFor(m => m.TransactionAmount)
        @Html.TextBoxFor(m => m.TransactionAmount, "{0:#.#}",
       new { @class = "form-control" })
    </div>

    <div id="targetAccountTransfer" class="form-group hidden">
        @Html.LabelFor(m => m.Accounts)
        @Html.DropDownListFor(
            m => m.Accounts,
            new SelectList(Model.Accounts,
            "AccountId", "AccountName"),
            "Select Transaction Type",
            new { @class = "form-control", @id = "secondaryAccountDropdown" })
    </div>

    //add date field on top of comment
    <div class="form-group hidden" id="dateField">
        @Html.LabelFor(m => m.TransactionDate)
        @Html.TextBoxFor(model => model.TransactionDate,
           new { @class = "form-control", @type = "date",
               @Value = Model.TransactionDate.ToString("yyyy-MM-dd") })
    </div>

    <div class="form-group hidden" id="commentField">
        @Html.LabelFor(m => m.Comment)
        @Html.TextAreaFor(m => m.Comment,
       new { @class = "form-control" })
    </div>


    <button type="submit" class="btn btn-primary">Save</button>

}

@section scripts
{
    <script>
        var accounts = @Html.Raw(Json.Encode(Model.Accounts));
        var checkings = '@BudgetApplication.Models.AccountType.Checkings';
        var savings = '@BudgetApplication.Models.AccountType.Savings';
        var creditCard = '@BudgetApplication.Models.AccountType.CreditCard';
        var transferId = '@BudgetApplication.Models.TransactionType.Transfer';

        $(document).ready(function () {

            //Add this line to a onSubmit code
            $('#transactionForm').trigger("reset");

            $('#primaryAccountDropdown').change(function () {
                var selected = $('#primaryAccountDropdown option:selected').val();
                var selectedAccount = accounts.find(function (acc) {
                    return acc.AccountId == selected;
                });
                if (selectedAccount != null) {
                    // show balance on selection
                    $('#balanceContainer').removeClass('hidden');

                    //show comment
                    $('#commentField').removeClass('hidden');

                    //show date
                    $('#dateField').removeClass('hidden');

                    //show debit/credit dropdown
                    $('#balanceText').append('$ ' + selectedAccount.Balance.toFixed(2));

                    if (selectedAccount.AccountType.AccountTypeId == creditCard) {
                        $('#creditActionForm').removeClass('hidden');
                    } else {
                        $('#debitActionForm').removeClass('hidden');
                    }

                    $('#amountField').removeClass('hidden');
                }
            });

            $('#debitTransactionDropdown').change(function () {
                var selected = $('#debitTransactionDropdown option:selected').val();
                if (selected == transferId) {
                    // show balance on selection
                    $('#targetAccountTransfer').removeClass('hidden');
                } else {
                    $('#targetAccountTransfer').addClass('hidden');
                }
            });

        });
    </script>
}